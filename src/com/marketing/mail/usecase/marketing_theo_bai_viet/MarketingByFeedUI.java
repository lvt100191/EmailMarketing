/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.marketing.mail.usecase.marketing_theo_bai_viet;

import com.marketing.db.FeedEntityDao;
import com.marketing.db.FeedMailDao;
import com.marketing.db.MailDao;
import com.marketing.entity.FeedMail;
import com.marketing.entity.Mail;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;

/**
 *
 * @author TUNGLV
 */
public class MarketingByFeedUI extends javax.swing.JFrame {

    /**
     * Creates new form MarketingByFeedUI
     */
    public MarketingByFeedUI() {
        initComponents();
        //set hien thi ra  giua man hinh
        setLocationRelativeTo(null);
        //set kich thuoc co dinh
        this.setResizable(false);
        //set hien thi len
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btCheckAmountFeed = new javax.swing.JButton();
        btGetMailByFeed = new javax.swing.JButton();
        btCheckNumToNoSendByFeed = new javax.swing.JButton();
        btCheckNumMailByFeed = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        txtStatus1 = new javax.swing.JLabel();
        txtIdTblFeed1 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        txtIdTblFeed = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtLimitMail = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quảng bá theo bài viết");

        btCheckAmountFeed.setText("Số bài viết thu thập được");
        btCheckAmountFeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckAmountFeedActionPerformed(evt);
            }
        });

        btGetMailByFeed.setText("Lấy danh sách N mail chưa gửi theo bài viết");
        btGetMailByFeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGetMailByFeedActionPerformed(evt);
            }
        });

        btCheckNumToNoSendByFeed.setText("Kiểm tra số mail chưa gửi theo bài viết");
        btCheckNumToNoSendByFeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckNumToNoSendByFeedActionPerformed(evt);
            }
        });

        btCheckNumMailByFeed.setText("Kiểm tra số mail thu thập được theo bài viết");
        btCheckNumMailByFeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckNumMailByFeedActionPerformed(evt);
            }
        });

        jButton5.setText("Lấy ra 10 bài viết thu thập gần đây nhất");

        jButton6.setText("Lấy ra 10 bài viết có số mail thu thập được nhiều nhất");

        txtOutput.setColumns(20);
        txtOutput.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtOutput.setForeground(new java.awt.Color(0, 0, 255));
        txtOutput.setLineWrap(true);
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        txtStatus1.setText("Trạng thái tbl_feed_mail");

        txtIdTblFeed1.setText("ID của bảng TBL_FEED");

        jLabel1.setText("Giới hạn số mail trả về");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btCheckAmountFeed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btCheckNumToNoSendByFeed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btCheckNumMailByFeed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btGetMailByFeed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdTblFeed1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdTblFeed, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(txtStatus)
                            .addComponent(txtLimitMail))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStatus1)
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdTblFeed1)
                            .addComponent(txtIdTblFeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btCheckAmountFeed, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(txtLimitMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btGetMailByFeed, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btCheckNumToNoSendByFeed, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(btCheckNumMailByFeed, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCheckAmountFeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckAmountFeedActionPerformed
        try {
            txtIdTblFeed.setText("");
            txtStatus.setText("");
            int numFeed = FeedEntityDao.countFeed();
            txtOutput.setText("Số lượng bài viết thu thập được trong bảng TBL_FEED: \n" + String.valueOf(numFeed));
        } catch (Exception ex) {
            Logger.getLogger(MarketingByFeedUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCheckAmountFeedActionPerformed

    private void btCheckNumToNoSendByFeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckNumToNoSendByFeedActionPerformed
        String status = txtStatus.getText().trim();
        String idTblFeed = txtIdTblFeed.getText().trim();
        String rs = "";
        String numMail = "0";
        if (status == null || status.isEmpty()) {
            rs = rs + "Yêu cầu nhập [Trạng thái tbl_feed_mail] " + "\n";
        }
        if (idTblFeed == null || idTblFeed.isEmpty()) {
            rs = rs + "Yêu cầu nhập [ID của bảng TBL_FEED] " + "\n";
        }
        if (rs.isEmpty()) {
            try {
                numMail = FeedMailDao.countMailToNoSendByFeed(status, idTblFeed);
            } catch (Exception ex) {
                Logger.getLogger(MarketingByFeedUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            rs = rs + "Tổng số email chưa gửi theo bài viết có idTblFeed = " + idTblFeed + " là: " + numMail;
        }
        txtOutput.setText(rs);
    }//GEN-LAST:event_btCheckNumToNoSendByFeedActionPerformed

    private void btCheckNumMailByFeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckNumMailByFeedActionPerformed
        String idTblFeed = txtIdTblFeed.getText().trim();
        txtStatus.setText("");
        String rs = "";
        String numMail = "0";
        if (idTblFeed == null || idTblFeed.isEmpty()) {
            rs = rs + "Yêu cầu nhập [ID của bảng TBL_FEED] " + "\n";
        }
        if (rs.isEmpty()) {
            try {
                numMail = FeedMailDao.countMailToByFeed(idTblFeed);
            } catch (Exception ex) {
                Logger.getLogger(MarketingByFeedUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            rs = rs + "Tổng số email theo bài viết có idTblFeed = " + idTblFeed + " là: " + numMail;
        }
        txtOutput.setText(rs);
    }//GEN-LAST:event_btCheckNumMailByFeedActionPerformed

    private void btGetMailByFeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGetMailByFeedActionPerformed
        String status = txtStatus.getText().trim();
        String idTblFeed = txtIdTblFeed.getText().trim();
        String limit = txtLimitMail.getText().trim();
        String rs = "";
        String mailLst = "";
        if (status == null || status.isEmpty()) {
            rs = rs + "Yêu cầu nhập [Trạng thái tbl_feed_mail] " + "\n";
        }
        if (idTblFeed == null || idTblFeed.isEmpty()) {
            rs = rs + "Yêu cầu nhập [ID của bảng TBL_FEED] " + "\n";
        }
        if (limit == null || limit.isEmpty()) {
            rs = rs + "Yêu cầu nhập [Giới hạn số mail trả về] " + "\n";
        }
        if (rs.isEmpty()) {
            try {
                ArrayList<FeedMail> fmList = FeedMailDao.getFmList(status, idTblFeed, limit);
                mailLst = MailDao.getMailListByFeed(fmList);

            } catch (Exception ex) {
                Logger.getLogger(MarketingByFeedUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            rs = rs + "Danh sách: " + limit + " email chưa gửi theo bài viết idTblFeed = " + idTblFeed + " là: \n" + mailLst;
        }
        txtOutput.setText(rs);
    }//GEN-LAST:event_btGetMailByFeedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarketingByFeedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarketingByFeedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarketingByFeedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarketingByFeedUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarketingByFeedUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCheckAmountFeed;
    private javax.swing.JButton btCheckNumMailByFeed;
    private javax.swing.JButton btCheckNumToNoSendByFeed;
    private javax.swing.JButton btGetMailByFeed;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtIdTblFeed;
    private javax.swing.JLabel txtIdTblFeed1;
    private javax.swing.JTextField txtLimitMail;
    private javax.swing.JTextArea txtOutput;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JLabel txtStatus1;
    // End of variables declaration//GEN-END:variables

    public JTextArea getTxtOutput() {
        return txtOutput;
    }

    public void setTxtOutput(JTextArea txtOutput) {
        this.txtOutput = txtOutput;
    }

}
